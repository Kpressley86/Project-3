{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\kelly\\\\Desktop\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\kelly\\\\Desktop\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\kelly\\\\Desktop\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\kelly\\\\Desktop\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\kelly\\\\Desktop\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\kelly\\\\Desktop\\\\Project-3\\\\client\\\\src\\\\components\\\\graph\\\\Graph.js\";\nimport React, { Component } from 'react';\nimport './Graph.css';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { Card } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport { Container, Row, Col } from 'reactstrap';\nam4core.useTheme(am4themes_animated); // Monthly income will be 100% of the circle then having  % taken\n// out of that will be monthly bills then split the rest between\n// what you are putting twards savings and whatevers left over\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph() {\n    _classCallCheck(this, Graph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Graph).apply(this, arguments));\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\n      chart.paddingRight = 20;\n      chart.data = [{\n        \"category\": \"Monthly Expenses\",\n        \"litres\": 501.9\n      }, {\n        \"category\": \"Left Over Funds\",\n        \"litres\": 301.9\n      }, {\n        \"category\": \"Amount Still Left to Save\",\n        \"litres\": 201.1\n      }];\n      var pieSeries = chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = \"litres\";\n      pieSeries.dataFields.category = \"category\";\n      pieSeries.slices.template.stroke = am4core.color(\"#fff\");\n      pieSeries.slices.template.strokeWidth = 2;\n      pieSeries.slices.template.strokeOpacity = 1; // This creates initial animation\n\n      pieSeries.hiddenState.properties.opacity = 1;\n      pieSeries.hiddenState.properties.endAngle = -90;\n      pieSeries.hiddenState.properties.startAngle = -90;\n      this.chart = chart;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chartdiv\",\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default Graph;","map":{"version":3,"sources":["c:/Users/kelly/Desktop/Project-3/client/src/components/graph/Graph.js"],"names":["React","Component","am4core","am4charts","am4themes_animated","Card","API","Container","Row","Col","useTheme","Graph","chart","create","PieChart","paddingRight","data","pieSeries","series","push","PieSeries","dataFields","value","category","slices","template","stroke","color","strokeWidth","strokeOpacity","hiddenState","properties","opacity","endAngle","startAngle","dispose","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AAGAP,OAAO,CAACQ,QAAR,CAAiBN,kBAAjB,E,CAEA;AACA;AACA;;IAEMO,K;;;;;;;;;;;;;wCACgB;AAClB,UAAIC,KAAK,GAAGV,OAAO,CAACW,MAAR,CAAe,UAAf,EAA2BV,SAAS,CAACW,QAArC,CAAZ;AAEAF,MAAAA,KAAK,CAACG,YAAN,GAAqB,EAArB;AAEAH,MAAAA,KAAK,CAACI,IAAN,GAAa,CAAC;AAEZ,oBAAY,kBAFA;AAGZ,kBAAU;AAHE,OAAD,EAKV;AAED,oBAAY,iBAFX;AAGD,kBAAU;AAHT,OALU,EASV;AAED,oBAAY,2BAFX;AAGD,kBAAU;AAHT,OATU,CAAb;AAeA,UAAIC,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAb,CAAkB,IAAIhB,SAAS,CAACiB,SAAd,EAAlB,CAAhB;AACAH,MAAAA,SAAS,CAACI,UAAV,CAAqBC,KAArB,GAA6B,QAA7B;AACAL,MAAAA,SAAS,CAACI,UAAV,CAAqBE,QAArB,GAAgC,UAAhC;AACAN,MAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BC,MAA1B,GAAmCxB,OAAO,CAACyB,KAAR,CAAc,MAAd,CAAnC;AACAV,MAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BG,WAA1B,GAAwC,CAAxC;AACAX,MAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BI,aAA1B,GAA0C,CAA1C,CAzBkB,CA2BlB;;AACAZ,MAAAA,SAAS,CAACa,WAAV,CAAsBC,UAAtB,CAAiCC,OAAjC,GAA2C,CAA3C;AACAf,MAAAA,SAAS,CAACa,WAAV,CAAsBC,UAAtB,CAAiCE,QAAjC,GAA4C,CAAC,EAA7C;AACAhB,MAAAA,SAAS,CAACa,WAAV,CAAsBC,UAAtB,CAAiCG,UAAjC,GAA8C,CAAC,EAA/C;AAEA,WAAKtB,KAAL,GAAaA,KAAb;AACD;;;2CAEsB;AACrB,UAAI,KAAKA,KAAT,EAAgB;AACd,aAAKA,KAAL,CAAWuB,OAAX;AACD;AACF;;;6BAEQ;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,CADA,CADF,CADF,CADF;AAWD;;;;EAtDiBpC,S;;AAyDpB,eAAeU,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Graph.css';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { Card } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport { Container, Row, Col } from 'reactstrap';\n\n\nam4core.useTheme(am4themes_animated);\n\n// Monthly income will be 100% of the circle then having  % taken\n// out of that will be monthly bills then split the rest between\n// what you are putting twards savings and whatevers left over\n\nclass Graph extends Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\n\n    chart.paddingRight = 20;\n\n    chart.data = [{\n\n      \"category\": \"Monthly Expenses\",\n      \"litres\": 501.9\n\n    }, {\n\n      \"category\": \"Left Over Funds\",\n      \"litres\": 301.9\n    }, {\n\n      \"category\": \"Amount Still Left to Save\",\n      \"litres\": 201.1\n    }];\n\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.value = \"litres\";\n    pieSeries.dataFields.category = \"category\";\n    pieSeries.slices.template.stroke = am4core.color(\"#fff\");\n    pieSeries.slices.template.strokeWidth = 2;\n    pieSeries.slices.template.strokeOpacity = 1;\n\n    // This creates initial animation\n    pieSeries.hiddenState.properties.opacity = 1;\n    pieSeries.hiddenState.properties.endAngle = -90;\n    pieSeries.hiddenState.properties.startAngle = -90;\n\n    this.chart = chart;\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n          <Card>\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n      </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}