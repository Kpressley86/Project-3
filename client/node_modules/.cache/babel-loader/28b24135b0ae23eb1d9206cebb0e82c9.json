{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14805\\\\Desktop\\\\ProjectThree\\\\Project-3\\\\client\\\\src\\\\components\\\\graph\\\\Graph.js\";\nimport React, { Component } from 'react';\nimport './Graph.class';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Graph extends Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\n    chart.paddingRight = 20;\n    chart.data = [{\n      \"category\": \"Monthly Expenses\",\n      \"litres\": 501.9\n    }, {\n      \"category\": \"Left Over Funds\",\n      \"litres\": 301.9\n    }, {\n      \"category\": \"Amount Still Left to Save\",\n      \"litres\": 201.1\n    }];\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.value = \"litres\";\n    pieSeries.dataFields.category = \"category\";\n    pieSeries.slices.template.stroke = am4core.color(\"#fff\");\n    pieSeries.slices.template.strokeWidth = 2;\n    pieSeries.slices.template.strokeOpacity = 1; // This creates initial animation\n\n    pieSeries.hiddenState.properties.opacity = 1;\n    pieSeries.hiddenState.properties.endAngle = -90;\n    pieSeries.hiddenState.properties.startAngle = -90;\n    this.chart = chart;\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/14805/Desktop/ProjectThree/Project-3/client/src/components/graph/Graph.js"],"names":["React","Component","am4core","am4charts","am4themes_animated","useTheme","Graph","componentDidMount","chart","create","PieChart","paddingRight","data","pieSeries","series","push","PieSeries","dataFields","value","category","slices","template","stroke","color","strokeWidth","strokeOpacity","hiddenState","properties","opacity","endAngle","startAngle","componentWillUnmount","dispose","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AAEAF,OAAO,CAACG,QAAR,CAAiBD,kBAAjB;;AAEA,MAAME,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAGN,OAAO,CAACO,MAAR,CAAe,UAAf,EAA2BN,SAAS,CAACO,QAArC,CAAZ;AAEAF,IAAAA,KAAK,CAACG,YAAN,GAAqB,EAArB;AAEAH,IAAAA,KAAK,CAACI,IAAN,GAAa,CAAC;AAEZ,kBAAY,kBAFA;AAGZ,gBAAU;AAHE,KAAD,EAKV;AAED,kBAAY,iBAFX;AAGD,gBAAU;AAHT,KALU,EASV;AAED,kBAAY,2BAFX;AAGD,gBAAU;AAHT,KATU,CAAb;AAeA,QAAIC,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAb,CAAkB,IAAIZ,SAAS,CAACa,SAAd,EAAlB,CAAhB;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqBC,KAArB,GAA6B,QAA7B;AACAL,IAAAA,SAAS,CAACI,UAAV,CAAqBE,QAArB,GAAgC,UAAhC;AACAN,IAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BC,MAA1B,GAAmCpB,OAAO,CAACqB,KAAR,CAAc,MAAd,CAAnC;AACAV,IAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BG,WAA1B,GAAwC,CAAxC;AACAX,IAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BI,aAA1B,GAA0C,CAA1C,CAzBkB,CA2BlB;;AACAZ,IAAAA,SAAS,CAACa,WAAV,CAAsBC,UAAtB,CAAiCC,OAAjC,GAA2C,CAA3C;AACAf,IAAAA,SAAS,CAACa,WAAV,CAAsBC,UAAtB,CAAiCE,QAAjC,GAA4C,CAAC,EAA7C;AACAhB,IAAAA,SAAS,CAACa,WAAV,CAAsBC,UAAtB,CAAiCG,UAAjC,GAA8C,CAAC,EAA/C;AAEA,SAAKtB,KAAL,GAAaA,KAAb;AACD;;AAEDuB,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKvB,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWwB,OAAX;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA9C2B;;AAiD9B,eAAe7B,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Graph.class';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nclass Graph extends Component {\r\n  componentDidMount() {\r\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n\r\n    chart.paddingRight = 20;\r\n\r\n    chart.data = [{\r\n      \r\n      \"category\": \"Monthly Expenses\",\r\n      \"litres\": 501.9\r\n      \r\n    }, {\r\n      \r\n      \"category\": \"Left Over Funds\",\r\n      \"litres\": 301.9\r\n    }, {\r\n      \r\n      \"category\": \"Amount Still Left to Save\",\r\n      \"litres\": 201.1\r\n    }];\r\n\r\n    let pieSeries = chart.series.push(new am4charts.PieSeries());\r\n    pieSeries.dataFields.value = \"litres\";\r\n    pieSeries.dataFields.category = \"category\";\r\n    pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n    pieSeries.slices.template.strokeWidth = 2;\r\n    pieSeries.slices.template.strokeOpacity = 1;\r\n\r\n    // This creates initial animation\r\n    pieSeries.hiddenState.properties.opacity = 1;\r\n    pieSeries.hiddenState.properties.endAngle = -90;\r\n    pieSeries.hiddenState.properties.startAngle = -90;\r\n\r\n    this.chart = chart;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}